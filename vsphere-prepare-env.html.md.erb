---
title: Preparing to Deploy PKS on vSphere
owner: Ops Manager
---

<strong><%= modified_date %></strong>
<html class="list-style-none"></html>

This guide describes the preparation steps required to install Pivotal Container Service (PKS) on vSphere **without** NSX-T integration.

In addition to fulfilling the prerequisites listed in the [vSphere Prerequisites and Resource Requirements](vsphere-requirements.html) topic,
you must create service accounts before deploying PKS.
Follow these procedures to prepare your vSphere environment.

## <a id="permissions"></a>Create vSphere Cloud Provider Service Accounts

In order for Kubernetes to attach persistent disks to pods, you must create service accounts with sufficient permissions.

<p class="note"><strong>Note</strong>: If your Kubernetes clusters span multiple vCenters, ensure that you set the service account privileges correctly in each vCenter.</p>

vSphere Cloud Provider service accounts require the following:

* Read access to the folder, host, and datacenter of the cluster node VMs
* Permission to create and delete VMs within the resource pool where PKS is deployed

### <a id="create-master"></a>Step 1: Create the Master Node Service Account

1. From the vCenter console, create a service account for Kubernetes cluster master VMs.

1. Grant the following permissions to the service account:
  * VirtualMachine.Configuration.Advanced
  * VirtualMachine.Configuration.Settings

### <a id="addl-permissions"></a>Step 2: Grant Additional Storage Permissions
Grant additional permissions to the master node service account. 
</br>
The tables in [Storage Permissions for Service Accounts](#storage-permissions) describe:
  * [Static Only Persistent Volume Provisioning](#static-only)
  * [Dynamic Persistent Volume Provisioning (with Storage Policy-Based Volume Placement)](#dynamic-policy)
  * [Dynamic Persistent Volume Provisioning (without Storage Policy-Based Volume Placement)](#dynamic-no-policy)

See [vSphere Storage for Kubernetes](https://vmware.github.io/vsphere-storage-for-kubernetes/documentation/index.html) in the VMware documentation for more information.

### <a id="create-worker"></a>Step 3: Create the Worker Node Service Account

1. From the vCenter console, create a service account for Kubernetes cluster worker VMs.

1. Grant the following permissions to the service account:
  * VirtualMachine.Configuration.Advanced
  * VirtualMachine.Configuration.Settings

## <a id="next-steps"></a>Next Steps

To install PKS on vSphere, follow the procedures in [Deploying Ops Manager to vSphere](vsphere-om-deploy.html).

## <a id="storage-permissions"></a> Storage Permissions

The following tables describe the minimum permissions required by the master node service account based on your storage configurations.

#### <a id="static-only"></a>Static Only Persistent Volume Provisioning
<table>
  <tr>
    <th>Roles</th>
    <th>Privileges</th>
    <th>Entities</th>
    <th>Propagate to Children</th>
  </tr>
  <tr>
    <td>manage-k8s-node-vms</td>
    <td>
      <ul>
        <li>VirtualMachine.Config.AddExistingDisk</li>
        <li>VirtualMachine.Config.AddNewDisk</li>
        <li>VirtualMachine.Config.AddRemoveDevice</li>
        <li>VirtualMachine.Config.RemoveDisk</li>
      </ul>
    </td>
    <td>VM Folder</td>
    <td>Yes</td>
  </tr>
  <tr>
    <td>manage-k8s-volumes</td>
    <td>Datastore.FileManagement (Low level file operations)</td>
    <td>Datastore</td>
    <td>No</td>
  </tr>
  <tr>
    <td>Read-only (pre-existing default role)</td>
    <td>
      <ul>
        <li>System.Anonymous</li>
        <li>System.Read</li>
        <li>System.View</li>
      </ul>
    </td>
    <td>
      <ul>
        <li>vCenter</li>
        <li>Datacenter</li>
        <li>Datastore Cluster</li>
        <li>Datastore Storage Folder</li>
      </ul>
    </td>
    <td>No</td>
  </tr>
</table>

<p class="note"><strong>Note</strong>: Datastore.FileManagement is only required for the role <code>manage-k8s-volumes</code> if a Persistent Volume Claim (PVC) is created to bind with a statically provisioned Persistent Volume (PV), and the reclaim policy set to delete.
  When the PVC is deleted, the statically provisioned PV is also deleted.

#### <a id="dynamic-policy"></a>Dynamic Persistent Volume Provisioning (with Storage Policy-Based Volume Placement)

<table>
  <tr>
    <th>Roles</th>
    <th>Privileges</th>
    <th>Entities</th>
    <th>Propagate to Children</th>
  </tr>
  <tr>
    <td>manage-k8s-node-vms</td>
    <td>
      <ul>
        <li>Resource.AssignVMToPool</li>
        <li>VirtualMachine.Config.AddExistingDisk</li>
        <li>VirtualMachine.Config.AddNewDisk</li>
        <li>VirtualMachine.Config.AddRemoveDevice</li>
        <li>VirtualMachine.Config.RemoveDisk</li>
        <li>VirtualMachine.Inventory.Create</li>
        <li>VirtualMachine.Inventory.Delete</li>
      </ul>
    </td>
    <td>
      <ul>
        <li>Cluster</li>
        <li>Hosts</li>
        <li>VM Folder</li>
      </ul>
    </td>
    <td>Yes</td>
  </tr>
  <tr>
    <td>manage-k8s-volumes</td>
    <td>
      <ul>
        <li>Datastore.AllocateSpace</li>
        <li>Datastore.FileManagement (Low level file operations)</li>
      </ul>
    </td>
    <td>Datastore</td>
    <td>No</td>
  </tr>
  <tr>
    <td>k8s-system-read-and-spbm-profile-view</td>
    <td>StorageProfile.View (Profile-driven storage view)</td>
    <td>vCenter</td>
    <td>No</td>
  </tr>
  <tr>
    <td>Read-only (pre-existing default role)</td>
    <td>
      <ul>
        <li>System.Anonymous</li>
        <li>System.Read</li>
        <li>System.View</li>
      </ul>
    </td>
    <td>
      <ul>
        <li>Datacenter</li>
        <li>Datastore Cluster</li>
        <li>Datastore Storage Folder</li>
      </ul>
    </td>
    <td>No</td>
  </tr>
</table>


#### <a id="dynamic-no-policy"></a>Dynamic Volume Provisioning (without Storage Policy-Based Volume Placement)

<table>
  <tr>
    <th>Roles</th>
    <th>Privileges</th>
    <th>Entities</th>
    <th>Propagate to Children</th>
  </tr>
  <tr>
    <td>manage-k8s-node-vms</td>
    <td>
      <ul>
        <li>VirtualMachine.Config.AddExistingDisk</li>
        <li>VirtualMachine.Config.AddNewDisk</li>
        <li>VirtualMachine.Config.AddRemoveDevice</li>
        <li>VirtualMachine.Config.RemoveDisk</li>
      </ul>
    </td>
    <td>VM Folder</td>
    <td>Yes</td>
  </tr>
  <tr>
    <td>manage-k8s-volumes</td>
    <td>
      <ul>
        <li>Datastore.AllocateSpace</li>
        <li>Datastore.FileManagement (Low level file operations)</li>
      </ul>
    </td>
    <td>Datastore</td>
    <td>No</td>
  </tr>
  <tr>
    <td>Read-only (pre-existing default role)</td>
    <td>
      <ul>
        <li>System.Anonymous</li>
        <li>System.Read</li>
        <li>System.View</li>
      </ul>
    </td>
    <td>
      <ul>
        <li>vCenter</li>
        <li>Datacenter</li>
        <li>Datastore Cluster</li>
        <li>Datastore Storage Folder</li>
      </ul>
    </td>
    <td>No</td>
  </tr>
</table>
