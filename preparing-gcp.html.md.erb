---
title: Preparing to Deploy PKS on GCP
owner: Ops Manager
---

<strong><%= modified_date %></strong>
<html class="list-style-none"></html>

This guide describes the preparation steps required to install Pivotal Container Service (PKS) on Google Cloud Platform (GCP).

## <a id='service-account'></a>Step 1: Create Resources in GCP

In addition to fulfilling the prerequisites listed in the [Prerequisites and Resource Requirements](requirements.html) topic,
you must create resources in GCP such as a new network, firewall rules, load balancers, and a service account before deploying PKS.
Follow these procedures to prepare your GCP environment. 

### <a id='iam-account'></a>Set up an IAM Service Account

In order for Kubernetes to create load balancers and attach persistent disks to pods, you must create a service account with sufficient permissions.

1. From the GCP Console, select **IAM & admin > Service accounts**.
1. Click **Create Service Account**.
1. Enter a name for the service account, and add the following roles:
  * `roles/compute.instanceAdmin`  (**Compute Engine > Compute Instance Admin**)
  * `roles/compute.securityAdmin` (**Compute Engine > Compute Security Admin**)
  * `roles/compute.networkAdmin` (**Compute Engine > Compute Network Admin**)
  * `roles/compute.storageAdmin` (**Compute Engine > Compute Storage Admin**)
  * `roles/compute.viewer` (**Compute Engine > Compute Viewer**)
1. Select **Furnish a new private key** and select **JSON**.
1. Click **Create**.
Your browser automatically downloads a JSON file with a private key for this account.
Save this file in a secure location.

### <a id='gcp-api'></a>Enable Google Cloud APIs

Ops Manager manages GCP resources using the Google Compute Engine and Cloud Resource Manager APIs.
To enable these APIs, perform the following steps:

1. Log in to the Google Developers console at [https://console.developers.google.com](https://console.developers.google.com).
1. In the console, navigate to the GCP project where you want to install PKS. 
1. Select **API Manager > Library**.
1. Under **Google Cloud APIs**, select **Compute Engine API**.
1. On the **Google Compute Engine API** page, click **Enable**.
1. In the search field, enter `Google Cloud Resource Manager API`. 
1. On the **Google Cloud Resource Manager API** page, click **Enable**.
1. To verify that the APIs have been enabled, perform the following steps:
    1. Log in to GCP:
    <pre class="terminal">
    $ gcloud auth login
    </pre>
    1. List your projects:
    <pre class="terminal">
    $ gcloud projects list
    PROJECT\_ID       NAME                 PROJECT\_NUMBER
    my-project-id    my-project-name      ##############
    </pre>
    This command lists the projects where you enabled Google Cloud APIs.

### <a id='create-network'></a>Create a GCP Network with Subnets

1. Log in to the [GCP Console](https://console.cloud.google.com/).
 
1. Navigate to the GCP project where you want to install PKS.

1. Select **VPC network**, then **CREATE VPC NETWORK**.
1. In the **Name** field, enter `MY-PKS-virt-net`.
`MY-PKS` is a prefix to help you identify resources for this PKS deployment in the GCP console.
  1. Under **Subnets**, complete the form as follows to create an infrastructure subnet for Ops Manager and NAT instances:
      <table>
        <tr>
          <th style="width:25%">Name</th>
          <td><code>MY-PKS-subnet-infrastructure-GCP-REGION</code></td>
        </tr>
        <tr>
          <th>Region</th>
          <td>A region that supports three availability zones (AZs).
          For help selecting the correct region for your deployment, see the [Google documentation on regions and zones](https://cloud.google.com/compute/docs/regions-zones/regions-zones).</td>
        </tr>
        <tr>
        <th>IP address range</th>
        <td>A CIDR ending in `/26`<br>
            Example: `192.168.101.0/26`</td>
        </tr>
      </table><br>
    1. Click **Add subnet** to add a second subnet for the BOSH Director, PKS API, and PKS broker with the following details:
      <table>
        <tr>
          <th style="width:25%">Name</th>
          <td><code>MY-PKS-subnet-pks-GCP-REGION</code></td>
        </tr>
        <tr>
          <th>Region</th>
          <td>The same region you selected for the infrastructure subnet</td>
        </tr>
        <tr>
        <th>IP address range</th>
        <td>A CIDR ending in `/22`<br>
            Example: `192.168.16.0/22`</td>
        </tr>
      </table><br>
    1. Click **Add subnet** to add a third subnet for the Kubernetes clusters with the following details:
      <table>
        <tr>
          <th style="width:25%">Name</th>
          <td><code>MY-PKS-subnet-services-GCP-REGION</code></td>
        </tr>
        <tr>
          <th>Region</th>
          <td>The same region you selected for the previous subnets</td>
        </tr>
        <tr>
        <th>IP address range</th>
        <td>A CIDR in `/22`<br>
            Example: `192.168.20.0/22`</td>
        </tr>
      </table><br>

1. Under **Dynamic routing mode**, leave **Regional** selected.

1. Click **Create**.

### <a id='create-nat'></a>Create NAT Instances

Use NAT instances when you want to expose only a minimal number of public IP addresses. 

1. In the console, navigate to **Compute Engine** > **VM instances**. 
1. Click **CREATE INSTANCE**. 
1. Complete the following fields:
  * **Name**: Enter `MY-PKS-nat-gateway-pri`.
  This is the first, or primary, of three NAT instances you need.
  If you are using a single AZ, you need only one NAT instance.
  * **Zone**: Select the first zone from your region.
  Example: For region `us-west1`, select zone `us-west1-a`.
  * **Machine type**: Select `n1-standard-4`.
  * **Boot disk**: Click **Change** and select `Ubuntu 14.04 LTS`. 

1. Expand the additional configuration fields by clicking **Management, disks, networking, SSH keys**.   
  1. In the **Startup script** field under **Automation**, enter the following text: 
      <code>#! /bin/bash<br>
      sudo sh -c 'echo 1 > /proc/sys/net/ipv4/ip_forward'<br>
      sudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE</code>

1. Click **Networking** to open additional network configuration fields:
    1. In the **Network tags** field, add the following: `nat-traverse` and `MY-PKS-nat-instance`. 
    1. Click the pencil icon to edit the **Network interface**. 
    1. For **Network**, select `MY-PKS-virt-net`. You created this network in [Step 1: Create a GCP Network with Subnets](#create-net).
    1. For **Subnetwork**, select `MY-PKS-subnet-infrastructure-GCP-REGION`.
    1. For **Primary internal IP**, select `Ephemeral (Custom)`.
    1. Enter an IP address in the **Custom ephemeral IP address** field. Example: `192.168.101.2`. The IP address must meet the following requirements: 
      - The IP address must exist in the CIDR range you set for the `MY-PKS-subnet-infrastructure-GCP-REGION` subnet. 
      - The IP address must exist in a reserved IP range set later in Ops Manager Director. The reserved range is typically the first `.1` through `.9` addresses in the CIDR range you set for the `MY-PKS-subnet-infrastructure-GCP-REGION` subnet. 
      - The IP address cannot be the same as the Gateway IP address set later in Ops Manager. The Gateway IP address is typically the first `.1` address in the CIDR range you set for the `MY-PKS-subnet-infrastructure-GCP-REGION` subnet. 
    1. For **External IP**, select `Ephemeral`.
    1. Set **IP forwarding** to `On`. 
    1. Click **Done**.

1. Click **Create** to finish creating the NAT instance.

1. To create additional NAT instances, repeat steps 2-6 using the names and zones specified in the table below.
  <table>
    <tr>
      <th rowspan="3" width="15%">Instance 2</th>
      <td width="15%"><strong>Name</strong></td>
      <td>
        <code>MY-PKS-nat-gateway-sec</code>
      </td>
    </tr>
    <tr>
    	<td><strong>Zone</strong></td>
      <td>
        Select the second zone from your region.<br>
        Example: For region <code>us-west1</code>, select zone <code>us-west1-b</code>.<br>
      </td>
    </tr>
    <tr>
      <td><strong>Internal IP</strong></td>
      <td>
        Select <code>Custom</code> and enter an IP address in the <strong>Internal IP address</strong> field. Example: `192.168.101.3`.
<br><br>As described above, this address must in the CIDR range you set for the <code>MY-PKS-subnet-infrastructure-GCP-REGION</code> subnet, must exist in a reserved IP range set later in Ops Manager Director, and cannot be the same as the Gateway IP address set later in Ops Manager. 
      </td>
    </tr>
    <tr>
      <th rowspan="3">Instance 3</th>
      <td><strong>Name</strong></td>
      <td>
        <code>MY-PKS-nat-gateway-ter</code>
      </td>
    </tr>
    <tr>
      <td><strong>Zone</strong></td>
      <td>
        Select the third zone from your region.<br>
        Example: For region <code>us-west1</code>, select zone <code>us-west1-c</code>.
      </td>
    </tr>
    <tr>
      <td><strong>Internal IP</strong></td>
      <td>
        Select <code>Custom</code> and enter an IP address in the <strong>Internal IP address</strong> field. Example: `192.168.101.4`.
<br><br>As described above, this address must in the CIDR range you set for the <code>MY-PKS-subnet-infrastructure-GCP-REGION</code> subnet, must exist in a reserved IP range set later in Ops Manager Director, and cannot be the same as the Gateway IP address set later in Ops Manager. 
      </td>
    </tr>
  </table>

#### <a id='nat-routes'></a>Create Routes for NAT Instances

1. In the GCP console, navigate to **VPC Networks** > **Routes**. 

1. Click **CREATE ROUTE**. 

1. Complete the form as follows:
  * **Name**: `MY-PKS-nat-pri`
  * **Network**: `MY-PKS-virt-net`
  * **Destination IP range**: `0.0.0.0/0`
  * **Priority**: `800`
  * **Instance tags**: `MY-PKS`
  * **Next hop**: `Specify an instance`
  * **Next hop instance**: `MY-PKS-nat-gateway-pri`

1. Click **Create** to finish creating the route. 

1. Repeat steps 2-4 to create two additional routes with the names and next hop instances specified in the table below.
The rest of the configuration remains the same. 
  <table>
    <tr>
      <th>Route 2</th>
      <td>
        <strong>Name</strong>: <code>MY-PKS-nat-sec</code><br>
        <strong>Next hop instance</strong>: <code>MY-PKS-nat-gateway-sec</code>
      </td>
    </tr>
    <tr>
      <th>Route 3</th>
      <td>
        <strong>Name</strong>: <code>MY-PKS-nat-ter</code><br>
        <strong>Next hop instance</strong>: <code>MY-PKS-nat-gateway-ter</code>
      </td>
    </tr>
    </table>

### <a id='firewall-rules'></a>Create Firewall Rules for the Network

GCP lets you assign [tags](https://cloud.google.com/compute/docs/label-or-tag-resources#tags) to virtual machine (VM) instances and create firewall rules that apply to VMs based on their tags. This step assigns tags and firewall rules to Ops Manager components and VMs that handle incoming traffic. 

1. In the **Networking** pane, select **Firewall rules**.

1. Create firewall rules according to the table below:
  <p class="note"><strong>Note</strong>: If you want your firewalls rules to only allow traffic within your private network, modify the <strong>Source IP Ranges</strong> from the table accordingly.</p>
  <table>
  <tr><th colspan="2" style="text-align: center;">Firewall Rules</th></tr>
   <tr>
    <tr>
      <th>Rule 1</th>
      <td>
        This rule allows SSH from public networks.<br><br>
        <strong>Name</strong>: <code>MY-PKS-allow-ssh</code><br>
        <strong>Network</strong>: <code>MY-PKS-virt-net</code><br>
        <strong>Allowed protocols and ports</strong>: <code>tcp:22</code><br>
        <strong>Source filter</strong>: IP ranges<br>
        <strong>Source IP ranges</strong>: <code>0.0.0.0/0</code><br>
        <strong>Target tags</strong>: <code>allow-ssh</code>
      </td>
    </tr>
    <tr>
      <th>Rule 2</th>
      <td>
        This rule allows HTTP from public networks.<br><br>
        <strong>Name</strong>: <code>MY-PKS-allow-http</code><br>
        <strong>Network</strong>: <code>MY-PKS-virt-net</code><br>
        <strong>Allowed protocols and ports</strong>: <code>tcp:80</code><br>
        <strong>Source filter</strong>: IP ranges<br>
        <strong>Source IP ranges</strong>: <code>0.0.0.0/0</code><br>
        <strong>Target tags</strong>: <code>allow-http</code>, <code>router</code>
      </td>
    </tr>
    <tr>
      <th>Rule 3</th>
      <td>
        This rule allows HTTPS from public networks.<br><br>
        <strong>Name</strong>: <code>MY-PKS-allow-https</code><br>
        <strong>Network</strong>: <code>MY-PKS-virt-net</code><br>
        <strong>Allowed protocols and ports</strong>: <code>tcp:443</code><br>
        <strong>Source filter</strong>: IP ranges<br>
        <strong>Source IP ranges</strong>: <code>0.0.0.0/0</code><br>
        <strong>Target tags</strong>: <code>allow-https</code>, <code>router</code>
      </td>
    </tr>
    <tr>
      <th>Rule 4</th>
      <td>
        This rule allows communication between BOSH-deployed jobs.<br><br>
        <strong>Name</strong>: <code>MY-PKS-allow-ert-all</code><br>
        <strong>Network</strong>: <code>MY-PKS-virt-net</code><br>
        <strong>Allowed protocols and ports</strong>: <code>tcp;udp;icmp</code><br>
        <strong>Source filter</strong>: Source tags<br>
        <strong>Target tags</strong>: <code>MY-PKS</code>, <code>MY-PKS-opsman</code>, <code>nat-traverse</code><br>
        <strong>Source tags</strong>: <code>MY-PKS</code>, <code>MY-PKS-opsman</code>, <code>nat-traverse</code>
      </td>
    </tr>
  </table>
1. If you are only using your GCP project to deploy PKS, then you can delete the following default firewall rules:
   * `default-allow-http`
   * `default-allow-https`
   * `default-allow-icmp`
   * `default-allow-internal`
   * `default-allow-rdp`
   * `default-allow-ssh`

## <a id='deploy-om'></a>Step 2: Deploy Ops Manager

To deploy Ops Manager, follow the procedures in [Deploying BOSH and Ops Manager to GCP](https://docs.pivotal.io/pivotalcf/2-0/customizing/gcp-om-deploy.html).

When you configure the **Networking** tab, replace the example values with the subnets and IP addresses you created in [Create a GCP Network with Subnets](#create-network)
of this topic.

## <a id='configure-om'></a>Step 3: Configure Ops Manager

To configure Ops Manager, follow the procedures in [Configuring Ops Manager Director on GCP](https://docs.pivotal.io/pivotalcf/2-0/customizing/gcp-om-config.html). In addition, use the PKS-specific information provided below.

1. When you configure the **Google Config** section, do the following:
  1. Use `MY-PKS` as **Default Deployment Tag**.
  1. In **AuthJSON** field, enter the JSON key from the service account that you created in [Set up an IAM Service Account the GCP](#iam-account).
1. When you configure the **Director Config** section, do the following:
  1. Enter  `metadata.google.internal` in the **NTP Servers (comma delimited)** field.
  1. Ensure that the **Enable Post Deploy Scripts** checkbox is selected.
    <p class="note"><strong>Note</strong>: This setting enables post-deploy scripts for all tiles in your Ops Manager installation.</p>
  1. Ensure that BOSH DNS is enabled. If you disabled BOSH DNS, you must re-enable it and redeploy PCF.
    <p class="note"><strong>Note</strong>: BOSH DNS must be enabled in all PKS deployments. If PAS and PKS are running on the same instance of Ops Manager, you cannot use the opt-out feature of BOSH DNS for your PAS without breaking PKS. If you want to opt out of BOSH DNS in your PAS deployment, install the tile on a separate instance of Ops Manager. For more information about opting out of BOSH DNS, see <a href="https://discuss.pivotal.io/hc/en-us/articles/115015720428-Disabling-or-Opting-Out-of-BOSH-DNS-in-PCF">this KB article</a> and <a href="https://docs.pivotal.io/pivotalcf/2-0/pcf-release-notes/opsmanager-rn.html#bosh-dns">Ops Manager v2.0 Release Notes</a>.</p>
1. When you configure the **Create Networks** section, refer to the examples below for information about setting up networks for your PKS deployment.

    <table>
      <tr>
        <th rowspan="7" width="21%">Main<br> Network</th>
        <th>Field</th>
        <th>Configuration</th>
      </tr>
      <tr>
        <td>Name</td>
        <td><code>pks-main</code></td>
      </tr>
      <tr>
        <td>Google Network Name</td>
        <td><code>MY-PKS-virt-net/MY-PKS-subnet-pks-GCP-REGION/GCP-REGION</code></td>
      </tr>
      <tr>
        <td>CIDR</td>
        <td><code>192.168.16.0/22</code></td>
      </tr>
      <tr>
        <td>Reserved IP Ranges</td>
        <td><code>192.168.16.1-192.168.16.9</code></td>
      </tr>
      <tr>
        <td>DNS</td>
        <td><code>169.254.169.254</code></td>
      </tr>
      <tr>
        <td>Gateway</td>
        <td><code>192.168.16.1</code></td>
      </tr>
      <tr>
        <th rowspan="7" width="21%">Service Network</th>
        <th>Field</th>
        <th>Configuration</th>
      </tr>
      <tr>
        <td>Name</td>
        <td><code>pks-services</code></td>
      </tr>
      <tr>
        <td>Google Network Name</td>
        <td><code>MY-PKS-virt-net/MY-PKS-subnet-services-GCP-REGION/GCP-REGION</code></td>
      </tr>
      <tr>
        <td>CIDR</td>
        <td><code>192.168.20.0/22</code></td>
      </tr>
      <tr>
        <td>Reserved IP Ranges</td>
        <td><code>192.168.20.1-192.168.20.9</code></td>
      </tr>
      <tr>
        <td>DNS</td>
        <td><code>169.254.169.254</code></td>
      </tr>
      <tr>
        <td>Gateway</td>
        <td><code>192.168.20.1</code></td>
      </tr>
    </table>

1. In the **Resource Config** section, ensure that the **Internet Connected** checkbox is not selected for any jobs.

## <a id='next-steps'></a>Next Steps

To install PKS on GCP, follow the procedures in [Installing and Configuring PKS](installing.html).
