---
title: Configure a Load Balancer for PKS Clusters
owner: PKS
---

A load balancer is a third party device that distributes network and application traffic across resources. You can use a load balancer to secure and facilitate access to Harbor from outside the network. 

The example below explains how to create a load balancer for your cluster and use the CLI to create and manage clusters. To complete these procedures, you must have already configured an external load balancer to access the PKS API.

<p class="note"><strong>Note</strong>: Make sure the version of the CLI you are using matches the version of the PKS tile you are installing.</p>

<ol>
	<li>Log into the PKS API and create a cluster. An example command follows:
	<code>pks login -a api.pks.EXAMPLE-URL.co -u "EXAMPLE-USERNAME" -p "EXAMPLE-PASSWORD" -k</code><br/>
	For more information, see <a href="./create-cluster.html">Create a Cluster</a>.</li>
	<li>Create a load balancer for your Kubernetes cluster API. The following configuration parameters are required:<br/>
		<ul>
			<li>You must configure a TCP Load Balancer with a human-readable name, such as <code>PKS-CLUSTER-API-1</code></li>
			<li>When you configure the load balancer backend, health checks are not required.</li>
			<li>When you configure the load balancer frontend, the following configuration parameters are required:<br/>
				<ul>
					<li>Reserve an IP address, such as <code>192.0.2.0</code>.</li>
					<li>Give it a human-readable name, such as <code>PKS-CLUSTER-API</code>.</li>
					<li>Open port <code>8443</code>.</li>
				</ul>
			</li>
		</ul>
	</li>
	<li>Create firewall rules for the load balancer. The following configuration parameters are required:<br/>
		<ul>
			<li>Select the network name value that matches the VPC network name you created earlier. This is not the default name.</li>
			<li>Set <strong>Ingress</strong> to <code>Allow</code>.</li>
			<li>Set <strong>Target</strong> to <code>PKS-CLUSTER-API-1</code>, which you defined in Step 1.</li>
			<li>Set the <strong>Source</strong> to <code>0.0.0.0/0</code>.</li>
			<li>Set the <strong>Ports</strong> to <code>tcp:8443</code>.</li>
		</ul>
	</li>
	<li>Enter <code>pks list-plans</code>.</li>
	<li>Choose a plan by ?????????????</li>
	<li>Create a cluster on this plan. Example code follows: <code>pks create-cluster YOUR-CLUSTER-NAME --external-hostname 192.0.2.0 --plan small --num-nodes 3</code>.</li>
	<li>Wait while the cluster is created. To check the creation progress, enter the following command in the BOSH CLI of the Ops Manager instance: <code>bosh -e pks task</code>.<br>
	<p class="note"><strong>Note</strong>: This errand may run after the deployment. Depending on what other tasks you have queued, several BOSH tasks may run at this time.</li>
	<li>Connect the Kubernetes cluster API load balancer to the master instance of the cluster.</li>
	<li>Search for the master VM ID by either entering <code>bosh -e pks vms</code>. Alternatively, you can log into the GCP Console and navigate to <strong>Compute Engine</strong> > <strong>VM Instances</strong>, and filter the results by <strong>Master</strong>.</li>
	<li>Edit the pks-cluster-api-1 load balancer and add that instance in the Backend configuration. HOW???????????????????</li>
	<li>Add the <code>pks-cluster-api-1</code> network tag to the master instance. This funnels traffic through the load balancer and into the cluster.</li>
