---
title: Using PKS
owner: PKS
---

<p class="note"><strong>Note</strong>: The PKS documentation is still under development. This topic will continue to be updated and expanded to reflect the most current information.</p>

This topic describes how to use Pivotal Container Services (PKS).

After an operator has [installed](installing.html) PKS, developers can use the PKS Command Line Interface (PKS CLI) to do the following:

* [Create](#create-cluster) a Kubernetes cluster
* [Update](#update-cluster) the name of a Kubernetes cluster
* [View](#view-cluster) the list of running Kubernetes clusters
* [Delete](#delete-cluster) a Kubernetes cluster

To deploy application workloads to a Kubernetes cluster, developers use `kubectl`, the Kubernetes CLI. For more information, see the [Kubernetes documentation](https://kubernetes.io/docs/user-guide/kubectl-overview/).

##<a id='prereqs'></a> Prerequisites

To perform the procedures in this topic, you must have the following:

1. The PKS CLI installed on your local machine
1. A Pivotal Cloud Foundry (PCF) deployment with Ops Manager and PKS installed, but not Pivotal Application Service (PAS)

##<a id='create-cluster'></a> Create Cluster

<p class="note"><strong>Note</strong>: The PKS CLI is still under development. Until then, use the following commands to create a cluster.</p>


To create a cluster, perform the following steps:

1. Create a cluster with the PKS CLI, specifying the cluster name and the load balancer for the cluster.
`
curl -k -s -X POST --header 'Content-Type: application/json' --header 'Accept: application/json;charset=UTF-8' -d '{"name": "${CLUSTER_NAME}","parameters": {"kubernetes_master_host": "${KUBERNETES_SERVICE_HOST}","worker_haproxy_ip_addresses": "${WORKLOAD_ADDRESS:-}", "authorization_mode": "$AUTHORIZATION_MODE" },"plan_id": ""}' https://{PKS_API_ENDPOINT}:9021/v1/clusters/
`
Where `$CLUSTER_NAME` is the unique name of cluster, and `$AUTHORIZATION_MODE` is either abac or rbac.

2. Bind a user to the newly created cluster. If the command completes successfully, it displays the cluster credentials and downloads the cluster configuration, known as the kubeconfig, to your local machine.
`
curl -k -s -X POST -d "{}" https://{PKS_API_ENDPOINT}:9021/v1/clusters/{CLUSTER_NAME}/binds
`
The following JSON is returned from the request:
```
{
  "credentials": {
    "kubeconfig": {
      "apiVersion": "v1",
      "clusters": [
        {
          "cluster": {
            "certificate-authority-data": "some_data",
            "server": "https://server"
          },
          "name": "kubo-cluster"
        }
      ],
      "contexts": [
        {
          "context": {
            "cluster": "kubo-cluster",
            "user": "some_user"
          },
          "name": "kubo-cluster"
        }
      ],
      "current-context": "kubo-cluster",
      "kind": "Config",
      "preferences": {},
      "users": [
        {
          "name": "some_name",
          "user": {
            "token": "some_token"
          }
        }
      ]
    }
  }
}
```

Extract the kubeconfig by copying the json value under "kubeconfig", and then save it to the file `$HOME/.kube/config`.

You can use the credentials and the kubeconfig to deploy application workloads to your cluster with `kubectl`. For more information, see the [Kubernetes documentation](https://kubernetes.io/docs/user-guide/kubectl-overview/).

##<a id='update-cluster'></a> Update Cluster Name

<p class="note"><strong>Note</strong>: This section is still under development.</p>


##<a id='view-cluster'></a> View Cluster List

<p class="note"><strong>Note</strong>: This section is still under development.</p>
To view details of the clusters that were deployed, execute the following command:
`
curl -k -s -X GET --header 'Content-Type: application/json' --header 'Accept: application/json;charset=UTF-8'https://$PKS_API_ADDRESS:9021/v1/clusters
`
The response lists details including the cluster name and status

##<a id='delete-cluster'></a> Delete Cluster

<p class="note"><strong>Note</strong>: This section is still under development.</p>
To delete a cluster, execute the following command:
`
curl -k -s -X DELETE --header 'Content-Type: application/json' --header 'Accept: application/json;charset=UTF-8' https://$PKS_API_ADDRESS:9021/v1/clusters/$CLUSTER_NAME/
`, where `$CLUSTER_NAME is the name of the cluster being deleted.

